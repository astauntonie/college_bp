plugins {
	id 'groovy'
	id "com.github.erdi.webdriver-binaries" version "2.2"
}

group = 'com.nerdyninja.college'
version = '1.0.0'
sourceCompatibility = '11'

configurations {
}

ext {
	// The drivers we want to use
	drivers = ["firefox", "chrome", "chromeHeadless"]

	ext {
		gebVersion = '3.4.1'
		seleniumVersion = '3.141.59'
		//chromeDriverVersion = '79.0.3945.36'
		//chromeDriverVersion = '87.0.4280.88'
		chromeDriverVersion = '2.42.0'
		geckoDriverVersion = '0.26.0'
	}
}

repositories {
	mavenCentral()
	jcenter()
}

dependencies {
	testImplementation "org.gebish:geb-gradle:$gebVersion"
	testImplementation "org.gebish:geb-spock:$gebVersion"
	testImplementation "org.gebish:geb-core:$gebVersion"
	testImplementation "org.testcontainers:selenium:1.15.0"
	testImplementation "org.testcontainers:spock:1.15.0"
	testImplementation "org.seleniumhq.selenium:selenium-support:$seleniumVersion"
	testImplementation "org.seleniumhq.selenium:selenium-remote-driver:$seleniumVersion"
	testImplementation "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
	testImplementation "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
}

webdriverBinaries {
	chromedriver {
		version = chromeDriverVersion
		fallbackTo32Bit = true
	}
	geckodriver geckoDriverVersion
}


drivers.each { driver ->
    task "${driver}Test"(type: Test) {
        group JavaBasePlugin.VERIFICATION_GROUP

        outputs.upToDateWhen { false }  // Always run tests

        systemProperty "geb.build.reportsDir", reporting.file("geb/$name")
        systemProperty "geb.env", driver
    }
}

test {
    dependsOn drivers.collect { tasks["${it}Test"] }
    enabled = false
}

task printSourceSetInformation(){
	doLast{
		sourceSets.each { srcSet ->
			println "["+srcSet.name+"]"
			print "-->Source directories: "+srcSet.allJava.srcDirs+"\n"
			print "-->Output directories: "+srcSet.output.classesDirs.files+"\n"
			println ""
		}
	}
}
