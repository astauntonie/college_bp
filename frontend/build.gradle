plugins {
	id 'org.springframework.boot' version '2.4.3'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'groovy'
	id 'jacoco'
	id 'name.remal.sonarlint' version '1.1.4'
	id "org.sonarqube" version "3.0"
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'com.google.cloud.tools.jib' version '3.0.0'
}

group = 'com.nerdyninja.college'
version = "${version != 'unspecified' ? version : '1.1.0'}"
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

repositories {
	mavenCentral()
	jcenter()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

	//OkHttp
	implementation("com.squareup.okhttp3:okhttp")
	implementation("com.squareup.okhttp3:logging-interceptor")

	implementation 'junit:junit'


	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation('org.spockframework:spock-core:2.0-M3-groovy-2.5')
	testImplementation('org.spockframework:spock-spring:2.0-M3-groovy-2.5')
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
}


test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

springBoot {
	mainClassName = 'com.nerdyninja.college.bp.fe.BloodPressureApplication'
}

jacocoTestReport {
	dependsOn test
	reports {
		html.enabled true
		xml.enabled true
	}
}

dependencyManagement {
	imports {
	}
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}

test.finalizedBy jacocoTestReport
project.tasks["sonarqube"].dependsOn test
tasks.build.dependsOn tasks.jibDockerBuild

jib {
	from {
		image = 'gcr.io/distroless/java:11-nonroot'
	}
	to {
		image = 'mscdevops4139/bloodpressure-fe'
		tags = [ project.version, 'latest']
	}
	container {
		jvmFlags = ['-Xms512m']
		mainClass = 'com.nerdyninja.college.bp.fe.BloodPressureApplication'
		ports = ['8081']
		format = 'OCI'
	}
}
